### Starting build.
# Target: test_query.ml.depends, tags: { extension:ml, file:test_query.ml, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules test_query.ml > test_query.ml.depends
# Target: parse.mli.depends, tags: { extension:mli, file:parse.mli, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules parse.mli > parse.mli.depends # cached
# Target: parse.cmi, tags: { byte, compile, extension:mli, file:parse.mli, interf, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlc.opt -c -o parse.cmi parse.mli # cached
# Target: query.mli.depends, tags: { extension:mli, file:query.mli, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules query.mli > query.mli.depends # cached
# Target: sequence.mli.depends, tags: { extension:mli, file:sequence.mli, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules sequence.mli > sequence.mli.depends # cached
# Target: sequence.cmi, tags: { byte, compile, extension:mli, file:sequence.mli, interf, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlc.opt -c -o sequence.cmi sequence.mli # cached
# Target: query.cmi, tags: { byte, compile, extension:mli, file:query.mli, interf, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlc.opt -c -o query.cmi query.mli # cached
# Target: test_query.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test_query.cmo, file:test_query.ml, implem, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlc.opt -c -o test_query.cmo test_query.ml
# Target: parse.ml.depends, tags: { extension:ml, file:parse.ml, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules parse.ml > parse.ml.depends # cached
# Target: parse.cmx, tags: { compile, extension:cmx, extension:ml, file:parse.cmx, file:parse.ml, implem, native, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlopt.opt -c -o parse.cmx parse.ml # cached
# Target: query.ml.depends, tags: { extension:ml, file:query.ml, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules query.ml > query.ml.depends # cached
# Target: sequence.ml.depends, tags: { extension:ml, file:sequence.ml, ocaml, ocamldep, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamldep.opt -modules sequence.ml > sequence.ml.depends # cached
# Target: sequence.cmx, tags: { compile, extension:cmx, extension:ml, file:sequence.cmx, file:sequence.ml, implem, native, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlopt.opt -c -o sequence.cmx sequence.ml # cached
# Target: query.cmx, tags: { compile, extension:cmx, extension:ml, file:query.cmx, file:query.ml, implem, native, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlopt.opt -c -o query.cmx query.ml # cached
# Target: test_query.cmx, tags: { compile, extension:cmx, extension:ml, file:test_query.cmx, file:test_query.ml, implem, native, ocaml, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlopt.opt -c -o test_query.cmx test_query.ml
# Target: test_query.native, tags: { dont_link_with, extension:native, file:test_query.native, link, native, ocaml, program, quiet }
/Users/lauren/.opam/4.09.0/bin/ocamlopt.opt parse.cmx sequence.cmx query.cmx test_query.cmx -o test_query.native
# Compilation successful.
